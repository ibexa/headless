name: Browser tests
on:
    workflow_dispatch:
        inputs:
            send-success-notification:
                description: 'Send a notification when the tests pass'     
                required: false
                type: boolean
                default: true
    push:
        branches:
            - master
            - "[0-9]+.[0-9]+"
    pull_request: ~

jobs:
    old-image:
        name: "Old image"
        uses: ibexa/gh-workflows/.github/workflows/browser-tests.yml@main
        with:
            project-edition: "headless"
            test-suite: "--profile=regression --suite=headless"
            test-setup-phase-1: "--profile=regression --suite=setup-headless --tags=~@part2 --mode=standard"
            test-setup-phase-2: "--profile=regression --suite=setup-headless --tags=@part2 --mode=standard"
            setup: "doc/docker/base-dev.yml:doc/docker/db-postgresql.yml:doc/docker/varnish.yml:doc/docker/redis.yml:doc/docker/selenium.yml"
            send-success-notification: ${{ github.event.inputs.send-success-notification != 'false' }}
            multirepository: true
            job-count: 2
            timeout: 90
            php-image: "ezsystems/php:7.4-v2-node14"
        secrets:
            SATIS_NETWORK_KEY: ${{ secrets.SATIS_NETWORK_KEY }}
            SATIS_NETWORK_TOKEN: ${{ secrets.SATIS_NETWORK_TOKEN }}
            TRAVIS_GITHUB_TOKEN: ${{ secrets.TRAVIS_GITHUB_TOKEN }}
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            AUTOMATION_CLIENT_ID: ${{ secrets.AUTOMATION_CLIENT_ID }}
            AUTOMATION_CLIENT_INSTALLATION: ${{ secrets.AUTOMATION_CLIENT_INSTALLATION }}
            AUTOMATION_CLIENT_SECRET: ${{ secrets.AUTOMATION_CLIENT_SECRET }}
    new-image:
        name: "New image"
        uses: ibexa/gh-workflows/.github/workflows/browser-tests.yml@main
        with:
            project-edition: "headless"
            test-suite: "--profile=regression --suite=headless"
            test-setup-phase-1: "--profile=regression --suite=setup-headless --tags=~@part2 --mode=standard"
            test-setup-phase-2: "--profile=regression --suite=setup-headless --tags=@part2 --mode=standard"
            setup: "doc/docker/base-dev.yml:doc/docker/db-postgresql.yml:doc/docker/varnish.yml:doc/docker/redis.yml:doc/docker/selenium.yml"
            send-success-notification: ${{ github.event.inputs.send-success-notification != 'false' }}
            multirepository: true
            job-count: 2
            timeout: 90
            php-image: "ghcr.io/ibexa/docker/php:7.4-node14"
        secrets:
            SATIS_NETWORK_KEY: ${{ secrets.SATIS_NETWORK_KEY }}
            SATIS_NETWORK_TOKEN: ${{ secrets.SATIS_NETWORK_TOKEN }}
            TRAVIS_GITHUB_TOKEN: ${{ secrets.TRAVIS_GITHUB_TOKEN }}
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            AUTOMATION_CLIENT_ID: ${{ secrets.AUTOMATION_CLIENT_ID }}
            AUTOMATION_CLIENT_INSTALLATION: ${{ secrets.AUTOMATION_CLIENT_INSTALLATION }}
            AUTOMATION_CLIENT_SECRET: ${{ secrets.AUTOMATION_CLIENT_SECRET }}
